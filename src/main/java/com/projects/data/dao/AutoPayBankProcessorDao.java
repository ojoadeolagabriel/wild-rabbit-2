package com.projects.data.dao;import com.projects.data.dto.BankProcessor;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.cache.annotation.Cacheable;import org.springframework.cache.annotation.EnableCaching;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.simple.SimpleJdbcCall;import org.springframework.stereotype.Repository;import javax.sql.DataSource;import java.util.List;import java.util.Map;/** * Created by Adeola.Ojo */@EnableCaching@Repository("bank-processor-dao")public class AutoPayBankProcessorDao extends CoreDao {    private static final Logger logger = LoggerFactory.getLogger(AutoPayBankProcessorDao.class);    @Autowired    private void setupDao(@Qualifier(value = "localDataSource") DataSource ds) {        JdbcTemplate template = new JdbcTemplate(ds);        template.setResultsMapCaseInsensitive(true);        findAll = new SimpleJdbcCall(template)                .withProcedureName("uspGetAutogateProcessors")                .returningResultSet("result", BeanPropertyRowMapper.newInstance(BankProcessor.class));    }    /**     * fetch all data.     * @return     */    @Cacheable(value = "configurations", keyGenerator = "keyGenerator")    public List<BankProcessor> fetchAll() {        try {            Map<String, Object> executeResult = findAll.execute();            List<BankProcessor> bankProcessors = (List<BankProcessor>) executeResult.get("result");            return bankProcessors;        }catch(Exception ex){            logger.debug(ex.getMessage());        }        return null;    }}